# Copyright (C) <2021> Intel Corporation
#
# SPDX-License-Identifier: Apache-2.0

import("//build_overrides/webrtc.gni")
import("//build_overrides/owt.gni")
import("//testing/test.gni")

declare_args() {
  owt_openvino_root = ""
}

config("openvino") {
  assert(owt_openvino_root != "", "owt_openvino_root not set")
  defines = [ "USE_OPENVINO" ]
  include_dirs = [ 
    owt_openvino_root + "/inference_engine/include",
  ]
  if (is_debug) {
    lib_dirs = [ owt_openvino_root + "/inference_engine/lib/intel64/Debug" ]
    libs = [ 
      "inference_engined.lib",
      "inference_engine_transformationsd.lib",
    ]
  } else {
    lib_dirs = [ owt_openvino_root + "/inference_engine/lib/intel64/Release" ]
    libs = [ 
      "inference_engine.lib",
      "inference_engine_transformations.lib",
    ]
  }
  configs = [
    "//build/config/compiler:rtti",
  ]
}

config("openvino_opencv") {
  assert(owt_openvino_root != "", "owt_openvino_root not set")
  include_dirs = [ owt_openvino_root + "/opencv/include" ]
  lib_dirs = [ owt_openvino_root + "/opencv/lib" ]
  if (is_debug) {
    libs = [
      "opencv_core453d.lib",
      "opencv_imgproc453d.lib",
      "opencv_imgcodecs453d.lib",
      "opencv_highgui453d.lib",
      "opencv_videoio453d.lib",
    ]
  } else {
    libs = [
      "opencv_core453.lib",
      "opencv_imgproc453.lib",
      "opencv_imgcodecs453.lib",
      "opencv_highgui453.lib",
      "opencv_videoio453.lib",
    ] 
  }
}

shared_library("owt_ic") {
  sources = [
    "backgroundblur.cc",
    "backgroundblur.h",
    "postprocessing.cc",
    "postprocessing.h",
    "selfiesegmentation.cc",
    "selfiesegmentation.h",
  ]
  defines = [ "OWT_IC_IMPL" ]
  configs += [
    ":openvino",
    ":openvino_opencv",
  ]
  deps = [ 
    "//third_party/webrtc/api/video:video_frame",
    "//third_party/libyuv:libyuv",
  ]
}

executable("test_background_blur") {
  sources = [ "test_background_blur.cc" ]
  include_dirs = [ "//talk/owt/sdk/include/cpp" ]
  configs += [ 
    ":openvino",
    ":openvino_opencv",
  ]
  deps = [
    "//talk/owt:owt_sdk_base",
  ]
  data_deps = [
    ":owt_ic",
  ]
}
