# Copyright (C) <2021> Intel Corporation
#
# SPDX-License-Identifier: Apache-2.0

import("//build_overrides/webrtc.gni")
import("//build_overrides/owt.gni")
import("//testing/test.gni")

declare_args() {
  owt_openvino_root = ""
  owt_openvino_opencv_version = ""
  lib_suffix = ""
  dll_suffix = ""
}

config("openvino") {
  assert(owt_openvino_root != "", "owt_openvino_root not set")
  defines = [ "OWT_USE_OPENVINO" ]
  include_dirs = [ 
    owt_openvino_root + "/inference_engine/include",
  ]
  if (is_debug) {
    lib_dirs = [ owt_openvino_root + "/inference_engine/lib/intel64/Debug" ]
  } else {
    lib_dirs = [ owt_openvino_root + "/inference_engine/lib/intel64/Release" ]
  }
  configs = [ "//build/config/compiler:rtti" ]
}

config("openvino_opencv") {
  assert(owt_openvino_root != "", "owt_openvino_root not set")
  assert(owt_openvino_opencv_version != "", "owt_openvino_opencv_version not set")
  defines = [ "OWT_USE_OPENCV" ]
  include_dirs = [ owt_openvino_root + "/opencv/include" ]
  lib_dirs = [ owt_openvino_root + "/opencv/lib" ]
}

openvino_modules = [
  "ir_reader",
  "lp_transformations",
  "preproc",
  "transformations",
]

opencv_modules = [
  "core",
  "highgui",
  "imgcodecs",
  "imgproc",
  "videoio",
]

shared_library("owt_ic") {
  sources = [
    "backgroundblur.cc",
    "backgroundblur.h",
    "icmanager.cc",
    "icmanager.h",
    "selfiesegmentationmodel.cc",
    "selfiesegmentationmodel.h",
  ]
  defines = [ "OWT_IC_IMPL" ]
  configs += [
    ":openvino",
    ":openvino_opencv",
  ]
  include_dirs = [ "//talk/owt/sdk/include/cpp" ]
  libs = [ 
    "inference_engine" + lib_suffix,
    "inference_engine_transformations" + lib_suffix,
  ]
  foreach(module, opencv_modules) {
    libs += [ "opencv_" + module + owt_openvino_opencv_version + lib_suffix ]
  }
  deps = [ 
    "//third_party/webrtc/api/video:video_frame",
    "//third_party/libyuv:libyuv",
  ]
  data_deps = [
    ":openvino_library",
    ":openvino_opencv_library",
  ]
}

copy("openvino_library") {
  if (is_debug) {
    bin_dir = owt_openvino_root + "/inference_engine/bin/intel64/Debug"
    sources = [
      owt_openvino_root + "/inference_engine/external/tbb/bin/tbb_debug.dll",
      owt_openvino_root + "/deployment_tools/ngraph/lib/ngraphd.dll",
    ]
  } else {
    bin_dir = owt_openvino_root + "/inference_engine/bin/intel64/Release"
    sources = [
      owt_openvino_root + "/inference_engine/external/tbb/bin/tbb.dll",
      owt_openvino_root + "/deployment_tools/ngraph/lib/ngraph.dll",
    ]
  }
  sources += [ 
    bin_dir + "/inference_engine" + dll_suffix,
    bin_dir + "/plugins.xml",
    bin_dir + "/MKLDNNPlugin" + dll_suffix,
  ]
  foreach(module, openvino_modules) {
    sources += [ bin_dir + "/inference_engine_" + module + dll_suffix ]
  }
  outputs = [ "$target_out_dir/{{source_file_part}}" ]
}

copy("openvino_opencv_library") {
  bin_dir = owt_openvino_root + "/opencv/bin"
  sources = []
  foreach(module, opencv_modules) {
    sources += [ bin_dir + "/opencv_" + module + owt_openvino_opencv_version + dll_suffix ]
  }
  outputs = [ "$target_out_dir/{{source_file_part}}" ]
}
