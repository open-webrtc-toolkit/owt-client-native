pipeline {
    agent none
    options {
        buildDiscarder(logRotator(numToKeepStr:'5'))
        timeout(time: 40, unit: 'MINUTES')
    }
    stages {
        stage('BuildAndEnv'){
            parallel {
                stage('build') {
                    agent{
                        node {
                            label 'windows'
                            customWorkspace "D:/workspace/jenkins/src"
                        }
                    }
                    steps {
                        echo "$GIT_COMMIT"
                        bat 'D:/workspace/jenkins/buildSdk.bat %GIT_COMMIT%'
                    }
                }
                stage('startMcu') {
                    agent{
                        node {
                            label "$env.mcuServer"
                        }
                    }
                    steps {
                        withEnv(['JENKINS_NODE_COOKIE=dontkill']) {
                            sh "${mcuScriptPath}/startmcu.sh"
                        }
                    }
                }
            }
        }
        stage('Test') {
            agent{
                node {
                    label 'windows'
                }
            }
            steps {
                echo 'Testing..'
                bat 'D:/workspace/CppCheckin/ICSConference/runCase.bat'
            }
        }
        stage('Deploy') {
            agent{
                node {
                    label 'windows'
                }
            }
            steps {
                echo 'Deploying....'
            }
        }
    }
    post {
        always {
            echo 'One way or another, I have finished'
        }
        success {
            echo 'I succeeeded!'
            mail to: 'jincheng.shi@intel.com',
            subject: "Success Pipeline: ${currentBuild.fullDisplayName}",
            body: "Success with ${env.BUILD_URL}"
        }
        /*unstable {
            echo 'I am unstable :/'
            mail to: 'jincheng.shi@intel.com',
            subject: "Failed Pipeline: ${currentBuild.fullDisplayName}",
            body: "Something is wrong with ${env.BUILD_URL}"
        }*/
        failure {
            echo 'I failed :('
            mail to: 'jincheng.shi@intel.com',
            subject: "Failed Pipeline: ${currentBuild.fullDisplayName}",
            body: "Something is wrong with ${env.BUILD_URL}"
        }
        /*changed {
            echo 'Things were different before...'
            mail to: 'jincheng.shi@intel.com',
            subject: "Failed Pipeline: ${currentBuild.fullDisplayName}",
            body: "Something is wrong with ${env.BUILD_URL}"
        }*/
    }
}

